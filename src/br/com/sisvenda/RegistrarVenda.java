/*
 * RegistrarVenda.java
 *
 * Created on 2 de Fevereiro de 2008, 00:13
 */

package br.com.sisvenda;

import br.com.sisvenda.clientes.ClienteBean;
import br.com.sisvenda.clientes.ClienteControl;
import br.com.sisvenda.fornecedores.FornecedorBean;
import br.com.sisvenda.fornecedores.FornecedorControl;
import br.com.sisvenda.produtos.ProdutoBean;
import br.com.sisvenda.produtos.ProdutoControl;
import br.com.sisvenda.vendas.VendasBean;
import br.com.sisvenda.vendas.VendasControl;
import java.awt.HeadlessException;
import java.sql.Date;
import java.sql.ResultSet;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author  Cláudio
 */
public class RegistrarVenda extends javax.swing.JFrame {
    
    DefaultTableModel tmProdutos = new DefaultTableModel(null, new String[] {"Código", "Cód. Fornec.", "Nome", "Valor", "Qtde Estoque"});
    DefaultTableModel tmVendas = new DefaultTableModel(null, new String[] {"Produto","Quantidade","Valor"});
    ListSelectionModel lsmProdutos;
    List<ProdutoBean> produtos;
    List<VendasBean> venda = new ArrayList<VendasBean>();
    List<FornecedorBean> fornecedores;
    java.sql.PreparedStatement pstm;
    ResultSet rs;
    double total = 0;
    List<ClienteBean> clientes;
    int qtd =0;
    int NovoEstoque =0;
    int Estoque=0;
    
    /** Creates new form RegistrarVenda */
    public RegistrarVenda() {
        initComponents();
        listarClientes();
        fornecedores = new FornecedorControl().listarFornecedores("%%");
        System.out.println(fornecedores.size());
        cbFornecedores.removeAllItems();
        for (int i = 0; i < fornecedores.size(); i++){
            cbFornecedores.addItem(fornecedores.get(i).getNome());

    }
    }
   
    
    private void listarClientes(){
        ClienteControl cli = new ClienteControl();
        clientes = cli.listarClientes("%%");
        cbClientes.removeAllItems();
        for (int i = 0; i < clientes.size(); i++){
            cbClientes.addItem(clientes.get(i).getNome());
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel10 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        tfPesquisaProduto = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbProdutos = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        btPesquisaProduto = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btCancelar = new javax.swing.JButton();
        tfNome = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        ftfDesconto = new JFormattedTextField(NumberFormat.getNumberInstance());
        jLabel5 = new javax.swing.JLabel();
        ftfTotal = new JFormattedTextField(NumberFormat.getNumberInstance());
        tfValor = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        tfEstoque = new javax.swing.JTextField();
        cbClientes = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ftfQuantidade = new JFormattedTextField(NumberFormat.getNumberInstance());
        jScrollPane1 = new javax.swing.JScrollPane();
        tbVendas = new javax.swing.JTable();
        btIncluirProduto = new javax.swing.JButton();
        cbFornecedores = new javax.swing.JComboBox();
        btFinalizar = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registrar Venda");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel10.setText("Registrar Vendas");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Selecione o Produto:"));

        tbProdutos.setModel(tmProdutos);
        tbProdutos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        lsmProdutos = tbProdutos.getSelectionModel();
        lsmProdutos.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e) {
                if (! e.getValueIsAdjusting()){
                    tbProdutosLinhaSelecionada();
                }
            }
        });
        jScrollPane2.setViewportView(tbProdutos);

        jLabel8.setText("Selecione o Produto");

        btPesquisaProduto.setText("Pesquisar");
        btPesquisaProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisaProdutoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(27, 27, 27)
                        .addComponent(tfPesquisaProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btPesquisaProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 522, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btPesquisaProduto)
                    .addComponent(tfPesquisaProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados da Compra"));

        btCancelar.setText("Cancelar");
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });

        jLabel4.setText("Desconto:");

        jLabel5.setText("Total:");

        jLabel6.setText("Fornecedor:");

        jButton1.setText("Limpar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel7.setText("Estoque:");

        cbClientes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setText("Cliente:");

        jLabel2.setText("Produto:");

        jLabel3.setText("Quantidade:");

        tbVendas.setModel(tmVendas);
        jScrollPane1.setViewportView(tbVendas);

        btIncluirProduto.setText("Incluir");
        btIncluirProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btIncluirProdutoActionPerformed(evt);
            }
        });

        cbFornecedores.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btFinalizar.setText("Finalizar");
        btFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btFinalizarActionPerformed(evt);
            }
        });

        jLabel9.setText("Valor:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(53, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cbClientes, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(tfNome)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel3)
                                    .addGap(18, 18, 18)
                                    .addComponent(ftfQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(btIncluirProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 504, Short.MAX_VALUE)))
                        .addGap(26, 26, 26))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel5))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(tfEstoque)
                                        .addComponent(ftfDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(jLabel7)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(ftfTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(jLabel9)
                                            .addGap(18, 18, 18)
                                            .addComponent(tfValor, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(cbFornecedores, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btFinalizar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btCancelar)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(163, 163, 163))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(56, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(cbClientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ftfQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btIncluirProduto)
                        .addComponent(jLabel3)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ftfTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(ftfDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(tfValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cbFornecedores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btFinalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(458, 458, 458)
                        .addComponent(jLabel10)))
                .addGap(0, 26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        cancelarVenda();
    }//GEN-LAST:event_btCancelarActionPerformed

    private void cancelarVenda(){
        while (tmVendas.getRowCount() > 0){
            tmVendas.removeRow(0);
        }
        total = 0;
        ftfTotal.setValue(0);
        venda.clear();
        this.dispose();
    }
    
    private void btFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btFinalizarActionPerformed
        if (tfNome.equals("")) {
            JOptionPane.showMessageDialog(this, "Selecione pelo menos um produto!");
        } else {
            alterarProduto();
            cadastrarVenda();
            tmProdutos.setRowCount(0);
            tmVendas.setRowCount(0);
            ftfQuantidade.setText("");
            ftfTotal.setText("");// TODO add your handling code here:
            total = 0;

        }
    }//GEN-LAST:event_btFinalizarActionPerformed

    private void cadastrarVenda(){
        if (venda.size() == 0){
            JOptionPane.showMessageDialog(this, "Inclua pelo menos um produto!");
        } else {
            try {
                VendasControl vc = new VendasControl();
                SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
                java.util.Date d = new java.util.Date();
                Date data = Date.valueOf(formato.format(d));
                int codigo = vc.buscarCodigoUltimaVenda() + 1;
                for (int i = 0; i < venda.size(); i++){
                    venda.get(i).setCodigoCliente(clientes.get(cbClientes.getSelectedIndex()).getCodigo());
                    venda.get(i).setNomeCliente(clientes.get(cbClientes.getSelectedIndex()).getNome());
                    venda.get(i).setNomeProduto(produtos.get(tbProdutos.getSelectedRow()).getNome());
                    venda.get(i).setDataVenda(data);
                    venda.get(i).setCodigo(codigo);
                    vc.cadastrarVenda(venda.get(i));
                }
                JOptionPane.showMessageDialog(this, "Venda cadastrada com sucesso!");
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Erro ao cadastrar Venda!");
            }
        }
    }
    
    private void btIncluirProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btIncluirProdutoActionPerformed
       
        
        
        qtd = Integer.parseInt(ftfQuantidade.getText());
        Estoque = Integer.parseInt(tfEstoque.getText());
        NovoEstoque = Estoque-qtd;
       
        
        if(tfNome.getText().trim().equals("")){
        
             JOptionPane.showMessageDialog(this, "Escolha um item na tabela de produtos ao lado!");
        
        }
        
         else if (qtd>=Estoque){
        
              JOptionPane.showMessageDialog(this, "Impossivel Realizar Venda! Quantidade de estoque indisponivel!!");
        
        }else{
        
        
        tfEstoque.setText(String.valueOf(NovoEstoque));
        
         incluirProduto();
    }
    }//GEN-LAST:event_btIncluirProdutoActionPerformed

    private void btPesquisaProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisaProdutoActionPerformed
        listarProdutos();
    }//GEN-LAST:event_btPesquisaProdutoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        tmProdutos.setRowCount(0);
            tmVendas.setRowCount(0);
            ftfQuantidade.setText("");
            ftfTotal.setText("");// TODO add your handling code here:
            total = 0;

    }//GEN-LAST:event_jButton1ActionPerformed

       protected void listarProdutos(){
        ProdutoControl prd = new ProdutoControl();
        produtos = prd.listarProdutos("%" + tfPesquisaProduto.getText().trim() + "%");
        mostrarProdutos(produtos);
    }
    
    
    
    
private void incluirProduto(){
        
        try{
        if (verificarQuantidade()){
            VendasBean vb = new VendasBean();
            vb.setCodigoProduto(produtos.get(tbProdutos.getSelectedColumnCount()).getCodigo());
            vb.setQuantidade(Integer.parseInt(String.valueOf(ftfQuantidade.getValue())));
            venda.add(vb);
            String produto = produtos.get(tbProdutos.getSelectedRow()).getNome();
            String quantidade = String.valueOf(ftfQuantidade.getValue());
            String valor = String.valueOf(produtos.get(tbProdutos.getSelectedRow()).getValor() * Integer.parseInt(quantidade));
            String [] campos = new String [] { produto, quantidade, valor};
            tmVendas.addRow(campos);
            total += Double.parseDouble(valor);
            ftfTotal.setValue(total);
        } else {
            
            
                if(tfNome.getText()==null){
        
             JOptionPane.showMessageDialog(this, "Escolha um item na tabela de produtos ao lado!");
        
        }
                else{
                JOptionPane.showMessageDialog(this, "Quantidade Invalida! ");
                }
                
            ftfQuantidade.requestFocus();
        }
        
    }catch(Exception e)
            
            {
                
                JOptionPane.showMessageDialog(this, "Erro ao incluir");
            }
    }
    

   protected void mostrarProdutos(List<ProdutoBean> produtos){
        while (tmProdutos.getRowCount() > 0){
            tmProdutos.removeRow(0);
        }
        
        if (produtos.size() == 0){
            JOptionPane.showMessageDialog(this, "Nenhum produto encontrado!");
        }else{
            String [] campos = new String[] {null, null, null, null};
            for (int i = 0; i < produtos.size(); i++){
                tmProdutos.addRow(campos);
                tmProdutos.setValueAt(produtos.get(i).getCodigo(), i, 0);
                tmProdutos.setValueAt(produtos.get(i).getFornecedores_codigo(), i, 1);
                tmProdutos.setValueAt(produtos.get(i).getNome(), i, 2);
                tmProdutos.setValueAt(produtos.get(i).getValor(), i, 3);
                tmProdutos.setValueAt(produtos.get(i).getEstoque(), i, 4);
            }
        }
    }
    
    private boolean verificarQuantidade(){
        try {
            if (Integer.parseInt(String.valueOf(ftfQuantidade.getValue())) > 0){
                return true;
            }
        } catch (NumberFormatException ex) {
            ex.printStackTrace();
        }
        return false;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistrarVenda().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btFinalizar;
    private javax.swing.JButton btIncluirProduto;
    private javax.swing.JButton btPesquisaProduto;
    private javax.swing.JComboBox cbClientes;
    private javax.swing.JComboBox cbFornecedores;
    private javax.swing.JFormattedTextField ftfDesconto;
    private javax.swing.JFormattedTextField ftfQuantidade;
    private javax.swing.JFormattedTextField ftfTotal;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tbProdutos;
    private javax.swing.JTable tbVendas;
    private javax.swing.JTextField tfEstoque;
    private javax.swing.JTextField tfNome;
    private javax.swing.JTextField tfPesquisaProduto;
    private javax.swing.JTextField tfValor;
    // End of variables declaration//GEN-END:variables
 
    
    
    
     private void tbProdutosLinhaSelecionada(){
        if (tbProdutos.getSelectedRow() != -1){
            tfNome.setText(produtos.get(tbProdutos.getSelectedRow()).getNome());
            tfNome.setText(produtos.get(tbProdutos.getSelectedRow()).getNome());
            tfValor.setText(String.valueOf(produtos.get(tbProdutos.getSelectedRow()).getValor()));
            ftfTotal.setText(String.valueOf(produtos.get(tbProdutos.getSelectedRow()).getValor()));
            tfEstoque.setText(String.valueOf(produtos.get(tbProdutos.getSelectedRow()).getEstoque()));
            tfEstoque.setText(String.valueOf(produtos.get(tbProdutos.getSelectedRow()).getEstoque()));
            selecionaFornecedor(produtos.get(tbProdutos.getSelectedRow()).getFornecedores_codigo());
        } else {
            tfNome.setText("");
            tfValor.setText("");
            //tfFornecedor.setText("");
            tfEstoque.setText("");
            tfNome.setText("");
        }
    }
     
       private void selecionaFornecedor(int codigoFornecedor){
        for (int i = 0; i < fornecedores.size(); i++){
            if (fornecedores.get(i).getCodigo() == codigoFornecedor){
                cbFornecedores.setSelectedIndex(i);
                return;
            }
        }
    }
       
       
       private void alterarProduto(){
        if (tbProdutos.getSelectedRow() != -1){
            
                ProdutoControl pc = new ProdutoControl();
                ProdutoBean produto = new ProdutoBean();
                produto.setCodigo(produtos.get(tbProdutos.getSelectedRow()).getCodigo());
                produto.setFornecedores_codigo(fornecedores.get(cbFornecedores.getSelectedIndex()).getCodigo());
                System.out.println(fornecedores.get(cbFornecedores.getSelectedIndex()).getCodigo());
                produto.setNome(tfNome.getText());
                produto.setValor(Double.parseDouble(tfValor.getText().trim()));
                produto.setEstoque(Integer.parseInt(tfEstoque.getText().trim()));
                pc.alterarProduto(produto);
               
            }
         else{
            JOptionPane.showMessageDialog(this, "Erro!");
        }
    }
}
